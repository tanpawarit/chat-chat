[project]
name = "chat-chat-bot"
version = "0.1.0"
description = "Modular multi-platform chatbot with adapter architecture"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    # Platform-specific SDKs
    "line-bot-sdk>=3.9.0",
    # Memory system dependencies
    "redis>=5.0.0",
    "aiofiles>=23.2.0",
    "pyyaml>=6.0.1",
    "langchain-openai>=0.3.28",
    "langchain-core>=0.3.72",
]

# Optional dependency groups
[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "respx>=0.21.0",
    
    # Code quality
    "ruff>=0.1.0",
    "black>=23.10.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    
    # Development tools
    "watchfiles>=0.21.0",
    "python-dotenv>=1.0.0",
]

facebook = [
    # Facebook Messenger support
    "facebook-sdk>=3.1.0",
]

telegram = [
    # Telegram Bot API
    "python-telegram-bot>=20.7",
]

all = [
    # Include all optional dependencies
    "chat-chat-bot[dev,facebook,telegram]",
]

production = [
    # Production-specific dependencies
    "gunicorn>=21.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.38.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["adapters", "models", "bot_gateway", "memory"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--cov=adapters",
    "--cov=models", 
    "--cov=bot_gateway",
    "--cov=memory",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["adapters", "models", "bot_gateway", "memory"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "ARG002", # unused method argument
    "ARG001", # unused function argument
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/*" = ["ARG", "S101"]  # Allow unused arguments and assert statements in tests

[tool.ruff.lint.isort]
known-first-party = ["adapters", "models", "bot_gateway", "memory"]

[tool.black]
target-version = ['py312']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "linebot.*",
    "facebook.*",
    "telegram.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[dependency-groups]
dev = [
    "mypy>=1.17.0",
]

[project.scripts]
chat-bot = "main:main"
